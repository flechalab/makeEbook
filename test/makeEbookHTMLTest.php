<?php

namespace MakeEbook;

require_once(__DIR__ . '/../makeEbookHTML.class.php');

/**
 * Test class for makeEbookHTML.
 * Generated by PHPUnit on 2011-05-19 at 16:13:51.
 */
class makeEbookHTMLTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var makeEbookHTML
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {

        // url var 1 (chapter)
        $a    = 1;//9;

        // url var 2 (item)
        $b    = 11;

        $urls = array();

        for($i=1; $i<=$a; $i++) {
            for($j=1; $j<=$b; $j++) {
                $urls[] =  "http://progit.org/book/ch{$i}-{$j}.html";
            }
        }

        try {
            $this->object = new makeEbookHTML($urls);
            $this->object->setHeader('header');
            $this->object->setContent('content');
            $this->object->setClear(array('id'=>'nav', 'class'=>'clearfix'));
            $this->object->exec();
        }
        catch (Exception $e) {
            $this->fail('setUp Fail');
        }

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * testOutput().
     */
    public function testOutput() {

        try {
            $this->object->output();
        }
        catch(Exception $e) {
            $this->fail('Fail to output HTML');
        }

        $this->assertInternalType(\PHPUnit_Framework_Constraint_IsType::TYPE_NULL,
                $this->object->output());
    }

    /**
     * test getHtml
     */
    public function testGetHtml() {
        $this->assertInternalType(\PHPUnit_Framework_Constraint_IsType::TYPE_STRING, 
                $this->object->getHtml());
    }

    /**
     * test getlog
     */
    public function testGetLog() {

        $this->object->output();

        $expected = 'Crawler / Parser executed.' . \PHP_EOL .
                    'Output Executed (MakeEbook\makeEbookHTML).' . \PHP_EOL .
                    'String printed';

        $actual   = implode(PHP_EOL, $this->object->getLog());

        $this->assertEquals($expected, $actual);
    }

}

?>
